program ::= cmpdStmt
type ::= "integer"|"string"|userType|arrayType
arrayType ::= type "list"
userType ::= "identifier"
var ::= "identifier" | "identifier" "of" var | var "at" "const"
expression ::= numExpression|"const"
numExpression ::= expression operator expression|var|"const"
condition ::= expression relation expression
operator ::= "plus"|"minus"|"times"|"divided"|"mod"
relation ::= "smaller"|"larger"|"is"
def ::= "define" userType
declStmt ::= type "identifier"
declListStmt ::= arrayType "identifier"
stmt ::= cmpdStmt|assignStmt|ioStmt|ifStmt|declStmt|declListStmt|stopStmt
stmts ::= $ | stmt stmts
cmpdStmt ::= "begin" stmts "end"
assignStmt ::= var "becomes" expression
ioStmt ::= readStmt|printStmt
readStmt ::= "read" var
printStmt ::= "print" expression
ifStmt ::= "if" condition "then" stmt | "if" condition "then" stmt "else" stmt
loopStmt ::= "each" var "from" numExpression "to" numExpression stmt
stopStmt ::= "stop"