program ::= cmpdStmt
type ::= "integer"|"string"|type "list"|userType
var ::= "identifier" | "the" "identifier" "of" var | "that" var "at" expression
userType ::= "my" "identifier"
condition ::= expression "is" relation "compared" "to" expression
expression ::= to_operator expression "to" expression | from_operator expression "from" expression | with_operator expression "with" expression | var | "const"
to_operator ::= "add"
from_operator ::= "subtract"
with_operator ::= "multiply"|"divide"|"mod"
relation ::= "smaller"|"greater"|"equal"
defStmt ::= "define" userType cmpdDeclStmt
cmpdDeclStmt ::= "with" declStmts "end"
declStmts ::= declStmts declStmt | declStmt
declStmt ::= type "identifier"
stmt ::= cmpdStmt|assignStmt|ioStmt|ifStmt|declStmt|stopStmt|defStmt|loopStmt
stmts ::= stmt | stmts stmt
cmpdStmt ::= "begin" stmts "end"
assignStmt ::= var "becomes" expression
ioStmt ::= readStmt|printStmt
readStmt ::= "read" var
printStmt ::= "print" expression
ifStmt ::= "if" condition "then" "just" stmt | "if" condition "then" stmt "else" stmt
loopStmt ::= "each" var "from" expression "to" expression stmt
stopStmt ::= "stop"
